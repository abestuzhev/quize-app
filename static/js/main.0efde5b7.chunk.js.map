{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","components/ActiveQuize/ActiveQuize.css","components/ActiveQuize/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuize/FinishedQuize.css","components/UI/Button/Button.css","components/UI/Loader/Loader.css","components/UI/Input/Input.css","containers/Auth/Auth.css","hoc/Layout/Layout.css","components/UI/BackDrop/BackDrop.css","containers/Quize/Quize.css","components/ActiveQuize/AnswersList/AnswersList.css","containers/QuizeList/QuizeList.css","containers/QuizeCreator/QuizeCreator.css","components/UI/Select/Select.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuize/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuize/AnswersList/AnswersList.js","components/ActiveQuize/ActiveQuize.js","components/UI/Button/Button.js","components/FinishedQuize/FinishedQuize.js","components/UI/Loader/Loader.js","axios/axios-quize.js","store/actions/quize.js","store/actions/actionType.js","containers/Quize/Quize.js","containers/QuizeList/QuizeList.js","components/UI/Input/Input.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizeCreator/QuizeCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","BackDrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","isAuthenticated","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuize","ActiveQuize_Counter","answerNumber","quizeLength","question","Button","type","disabled","FinishedQuize","successCount","Object","keys","results","reduce","total","quize","quizeItem","length","onRetry","center","Loader","axios","create","baseURL","fetchQuizesSucces","quizes","fetchQuizesError","e","error","fetchQuizeSuccess","quizeSetState","answerState","Quize","fetchQuizeById","match","params","retryQuize","loading","isFinished","activeQuestion","quizeAnswerClick","dispatch","quizeId","a","get","response","data","answerId","getState","console","log","rightAnswer","timeout","window","setTimeout","isQuizeFinished","number","clearTimeout","QuizeList","name","fetchQuizes","renderQuizes","forEach","isInvalide","valid","touched","shouldValidate","inputType","Input","htmlFor","Math","random","invalid","value","onChange","errorMessage","createControl","config","validation","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","Select","options","option","createOptionControl","createFormControls","option1","option2","option3","option4","QuizeCreator","submitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizeQuestion","createQuizeHandler","finishCreateQuize","changeHandler","controlName","changeSelectHandler","target","select","onSubmit","renderControls","item","post","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","email","password","minLength","loginHandler","registerHandler","submitHandlet","onChangeHandler","validateControl","is","renderInputs","isLogin","authData","returnSecureToken","url","apiKey","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0efde5b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--2Nzcl\",\"close\":\"Drawer__close--3eUiV\",\"active\":\"Drawer__active--WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1mqO0\",\"open\":\"MenuToggle__open--1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuize\":\"ActiveQuize__ActiveQuize--rqxsq\",\"ActiveQuize_Counter\":\"ActiveQuize__ActiveQuize_Counter--3qAOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2zL-2\",\"success\":\"AnswerItem__success--3_2dH\",\"error\":\"AnswerItem__error--32_hj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuize\":\"FinishedQuize__FinishedQuize--2XCI-\",\"success\":\"FinishedQuize__success--3Drtq\",\"error\":\"FinishedQuize__error--3CNfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"success\":\"Button__success--3d-85\",\"error\":\"Button__error--tZCD8\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--2iSOk\",\"center\":\"Loader__center--1YZNW\",\"lds-ripple\":\"Loader__lds-ripple--1XXys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--s67N0\",\"invalid\":\"Input__invalid--flTJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2YUr1\",\"c-input\":\"Auth__c-input--2j9yl\",\"c-input-wrapper\":\"Auth__c-input-wrapper--14Jjd\",\"c-input-col\":\"Auth__c-input-col--3I6LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop--wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quize\":\"Quize__Quize--1257c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1nEo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizeList\":\"QuizeList__QuizeList--1xTRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizeCreator\":\"QuizeCreator__QuizeCreator--2rrL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--1rPbL\"};","import React from 'react';\r\nimport classes from './MenuToggle.css';\r\n\r\nconst MenuToggle = props => {\r\n    const cls =[\r\n        classes.MenuToggle,\r\n        'fa',\r\n        \r\n    ];\r\n\r\n    if(props.isOpen){\r\n        cls.push('fa-times');\r\n        cls.push(classes.open);\r\n    }else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i className={cls.join(' ')}\r\n        onClick={props.onToggle}\r\n        ></i>\r\n    )\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './BackDrop.css';\r\n\r\nconst BackDrop = props => {\r\n    return (\r\n        <div className={classes.BackDrop}\r\n            onClick={props.onClick}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop;","import React, {Component} from 'react';\r\nimport classes from './Drawer.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\n\r\n\r\nclass Drawer extends Component {\r\n   clickHandler = () => {\r\n      this.props.onClose();\r\n   };\r\n\r\n   renderLinks(links) {\r\n      return links.map((link, index) => {\r\n         return (\r\n            <li key={index}>\r\n\r\n               <NavLink\r\n                  to={link.to}\r\n                  exact={link.exact}\r\n                  activeClassName={classes.active}\r\n                  onClick={this.clickHandler}\r\n               >\r\n                  {link.label}\r\n               </NavLink>\r\n            </li>\r\n         )\r\n      })\r\n   }\r\n\r\n   render() {\r\n\r\n      const links = [\r\n         {to: '/', label: 'Список', exact: true}\r\n      ];\r\n\r\n      if (this.props.isAuthenticated){\r\n          links.push({to: '/quize-creator', label: 'Создать тест', exact: false});\r\n          links.push({to: '/logout', label: 'Выйти', exact: false});\r\n      }else {\r\n          links.push({to: '/auth', label: 'Авторизация', exact: false});\r\n      }\r\n\r\n      const cls = [\r\n         classes.Drawer\r\n      ];\r\n\r\n      if (!this.props.isOpen) {\r\n         cls.push(classes.close);\r\n      }\r\n      return (\r\n         <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n               <ul>\r\n                  {this.renderLinks(links)}\r\n               </ul>\r\n            </nav>\r\n            {this.props.isOpen ? <BackDrop onClick={this.props.onClose}/> : null}\r\n         </React.Fragment>\r\n\r\n      )\r\n   }\r\n}\r\n\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport classes from './Layout.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n\r\n    toggleMenuHandler = ()=> {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        });\r\n    }\r\n\r\n    menuCloseHandler = ()=> {\r\n        this.setState({\r\n            menu: false\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer \r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle \r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main >\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      isAuthenticated: !!state.auth.token\r\n   }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './AnswerItem.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem];\r\n    if(props.state){\r\n        cls.push(classes[props.state]);\r\n    }\r\n    return (\r\n        <li className={cls.join(' ')}\r\n            onClick={()=>{\r\n                props.onAnswerClick(props.answer.id)\r\n            }}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.css'\r\nimport AnswersItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => {\r\n    // console.log(props)\r\n    return (    \r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswersItem\r\n                    key={index}\r\n                    answer = {answer}\r\n                    onAnswerClick = {props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n        })}\r\n    </ul>\r\n)}\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuize.css';\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuize = props => {\r\n    return (\r\n    <div className={classes.ActiveQuize}>\r\n        <div className={classes.ActiveQuize_Counter}>{props.answerNumber} из {props.quizeLength}</div>\r\n        <h2>\r\n    {props.answerNumber}. {props.question}\r\n        </h2>\r\n        \r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick = {props.onAnswerClick}\r\n        />\r\n    </div>\r\n)}\r\n\r\nexport default ActiveQuize;","import React from 'react';\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishedQuize.css';\r\nimport Button from '../UI/Button/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishedQuize = (props)=> {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n\r\n        if(props.results[key] === 'success'){\r\n            total++\r\n        }\r\n\r\n        return total;\r\n    }, 0);\r\n    return (\r\n        <div className={classes.FinishedQuize}>\r\n            <ul>\r\n                {props.quize.map((quizeItem, index) => {\r\n                    const cls=[\r\n                        'fa',\r\n                        props.results[quizeItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizeItem.id]]\r\n                    ];\r\n\r\n                    // debugger\r\n\r\n                    return (\r\n                        <li \r\n                        key=\"index\"\r\n                        >\r\n                            <strong>{index + 1} {quizeItem.question}</strong> \r\n                            <i className={cls.join(' ')}></i>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>Правильно {successCount} из {props.quize.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to={'/'}>\r\n                    <Button type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuize;","import React from 'react';\r\nimport classes from './Loader.css';\r\n\r\nexport default props => {\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://quize-dcede.firebaseio.com/'\r\n})","import axios from \"../../axios/axios-quize\";\r\nimport {\r\n  FETCH_QUIZE_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISHED_QUIZE,\r\n  QUIZE_NEXT_QUIESTIN,\r\n  QUIZE_SET_STATE, RETRY_QUIZE\r\n} from \"./actionType\";\r\n\r\nexport function fetchQuizes() {\r\n   return async dispatch => {\r\n      dispatch(fetchQuizesStart());\r\n      try {\r\n         const quizes = [];\r\n         const response = await axios.get('/quize.json');\r\n         Object.keys(response.data).forEach((key, index) => {\r\n            quizes.push({\r\n               id: key,\r\n               name: `Тест ${index + 1}`\r\n            });\r\n         });\r\n         dispatch(fetchQuizesSucces(quizes));\r\n\r\n      } catch (e) {\r\n         dispatch(fetchQuizesError(e));\r\n      }\r\n   }\r\n}\r\n\r\nexport function fetchQuizeById(quizeId) {\r\n   return async dispatch => {\r\n      dispatch(fetchQuizesStart());\r\n\r\n      try {\r\n         const response = await axios.get(`/quize/${quizeId}.json`);\r\n         const quize = response.data;\r\n\r\n         dispatch(fetchQuizeSuccess(quize));\r\n      } catch (e) {\r\n         dispatch(fetchQuizesError(e));\r\n      }\r\n\r\n   }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n   return {\r\n      type: FETCH_QUIZES_START\r\n   }\r\n}\r\n\r\nexport function fetchQuizesSucces(quizes) {\r\n   return {\r\n      type: FETCH_QUIZES_SUCCESS,\r\n      quizes: quizes\r\n   }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n   return {\r\n      type: FETCH_QUIZES_ERROR,\r\n      error: e\r\n   }\r\n}\r\n\r\nexport function fetchQuizeSuccess(quize) {\r\n   return {\r\n      type: FETCH_QUIZE_SUCCESS,\r\n      quize\r\n   }\r\n}\r\n\r\n//action creator\r\nexport function quizeSetState(answerState, results) {\r\n   return {\r\n      type: QUIZE_SET_STATE,\r\n      answerState,\r\n      results\r\n   }\r\n}\r\n\r\nexport function finishQuize() {\r\n   return {\r\n      type: FINISHED_QUIZE\r\n   }\r\n}\r\n\r\nexport function quizeNextQuiestion(number) {\r\n   return {\r\n      type: QUIZE_NEXT_QUIESTIN,\r\n      number\r\n   }\r\n\r\n}\r\n\r\nexport function quizeAnswerClick(answerId) {\r\n   return (dispatch, getState) => {\r\n\r\n      const state = getState().quize;\r\n\r\n     // console.log('stateSTATE', state);\r\n\r\n      if (state.answerState) {\r\n         const key = Object.keys(state.answerState)[0];\r\n         // console.log('key', key)\r\n         if (state.answerState[key] === 'success') {\r\n            return\r\n         }\r\n      }\r\n\r\n      const question = state.quize[state.activeQuestion];\r\n      const results = state.results;\r\n\r\n      console.log('question', question);\r\n\r\n      if (question.rightAnswer === answerId) {\r\n         if (!results[question.id]) {\r\n            results[question.id] = 'success';\r\n         }\r\n         dispatch(quizeSetState({[answerId]: 'success'}, results));\r\n\r\n         const timeout = window.setTimeout(() => {\r\n            if (isQuizeFinished(state)) {\r\n\r\n               dispatch(finishQuize());\r\n\r\n            } else {\r\n               dispatch(quizeNextQuiestion(state.activeQuestion + 1));\r\n            }\r\n            window.clearTimeout(timeout);\r\n         }, 1000);\r\n\r\n      } else {\r\n         results[question.id] = 'error';\r\n         dispatch(quizeSetState({[answerId]: 'error'}, results));\r\n      }\r\n   };\r\n}\r\n\r\nexport function isQuizeFinished(state) {\r\n   return state.activeQuestion + 1 === state.quize.length;\r\n}\r\n\r\nexport function retryQuize() {\r\n  return {\r\n    type: RETRY_QUIZE\r\n  }\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZE_SUCCESS = 'FETCH_QUIZE_SUCCESS';\r\n\r\n\r\nexport const QUIZE_SET_STATE = 'QUIZE_SET_STATE';\r\nexport const FINISHED_QUIZE = 'FINISHED_QUIZE';\r\nexport const QUIZE_NEXT_QUIESTIN = 'QUIZE_NEXT_QUIESTIN';\r\nexport const RETRY_QUIZE = 'RETRY_QUIZE';\r\n\r\nexport const CREATE_QUIZE_QUESTION = 'CREATE_QUIZE_QUESTION';\r\nexport const RESET_QUIZE_CREATION = 'RESET_QUIZE_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, {Component} from 'react';\r\nimport classes from './Quize.css';\r\nimport ActiveQuize from '../../components/ActiveQuize/ActiveQuize';\r\nimport FinishedQuize from '../../components/FinishedQuize/FinishedQuize';\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizeById, quizeAnswerClick, retryQuize} from \"../../store/actions/quize\";\r\n\r\n\r\nclass Quize extends Component {\r\n\r\n\r\n   componentDidMount() {\r\n      this.props.fetchQuizeById(this.props.match.params.id)\r\n\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      this.props.retryQuize();\r\n   }\r\n\r\n   render() {\r\n      // console.log('this.props.results', this.props.results);\r\n      return (\r\n         <div className={classes.Quize}>\r\n            <div>\r\n               <h1>Выберите один из ответов</h1>\r\n               <div>\r\n                  {\r\n                     this.props.loading || !this.props.quize\r\n                        ? <Loader/>\r\n                        : this.props.isFinished\r\n                        ? <FinishedQuize\r\n                           results={this.props.results}\r\n                           quize={this.props.quize}\r\n                           onRetry={this.props.retryQuize}\r\n                        />\r\n                        : <ActiveQuize\r\n                           state={this.props.answerState}\r\n                           quizeLength={this.props.quize.length}\r\n                           question={this.props.quize[this.props.activeQuestion].question}\r\n                           answers={this.props.quize[this.props.activeQuestion].answers}\r\n                           onAnswerClick={this.props.quizeAnswerClick}\r\n                           answerNumber={this.props.activeQuestion + 1}\r\n                        />\r\n\r\n                  }\r\n\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      results: state.quize.results,\r\n      isFinished: state.quize.isFinished,\r\n      activeQuestion: state.quize.activeQuestion,\r\n      answerState: state.quize.answerState,\r\n      quize: state.quize.quize,\r\n      loading: state.quize.loading\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      fetchQuizeById: id => dispatch(fetchQuizeById(id)),\r\n      quizeAnswerClick: answerId => dispatch(quizeAnswerClick(answerId)),\r\n      retryQuize: () => dispatch(retryQuize())\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quize);","import React, {Component} from 'react';\r\nimport classes from './QuizeList.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchQuizes} from \"../../store/actions/quize\";\r\n\r\nclass QuizeList extends Component {\r\n\r\n\r\n    renderQuizes(){\r\n        return this.props.quizes.map((quize) => {\r\n            return (\r\n                <li\r\n                    key={quize.id}\r\n                >\r\n                    <NavLink to={'/quize/' + quize.id}>\r\n                        {quize.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes();\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div className={classes.QuizeList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    { this.props.loading && this.props.quizes.length !== 0\r\n                        ? <Loader />\r\n                        : <ul>\r\n                            {this.renderQuizes()}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    // console.log('STATE', state)\r\n    return {\r\n        quizes: state.quize.quizes,\r\n        loading: state.quize.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizeList)\r\n","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nfunction isInvalide({valid, touched, shouldValidate}){\r\n    return !valid && shouldValidate && touched;\r\n\r\n}\r\n\r\n\r\n\r\nexport default props => {\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if(isInvalide(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                id={htmlFor}\r\n                type={inputType}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalide(props)\r\n            ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n            : null\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}","export function createControl(config, validation){\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if(!validation){\r\n        return true\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n\r\n    for(let control in formControls){\r\n        if(formControls.hasOwnProperty(control)){\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}","const Auxiliary = props => props.children;\r\nexport default Auxiliary;","import React from 'react';\r\nimport classes from './Select.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random() * 100}`;\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index)=> {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\nimport classes from './QuizeCreator.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport {createControl, validate, validateForm} from \"../../form/formFramework\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport axios from '../../axios/axios-quize';\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizeQuestion, finishCreateQuize} from \"../../store/actions/create\";\r\n\r\nfunction createOptionControl(number) {\r\n   return createControl({\r\n      label: `Вариант ${number}`,\r\n      errorMessage: 'Значение не может быть пустым',\r\n      id: number\r\n   }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n   return {\r\n      question: createControl({\r\n         label: 'Введите вопрос',\r\n         errorMessage: 'Вопрос не может быть пустым'\r\n      }, {required: true}),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n   }\r\n}\r\n\r\nclass QuizeCreator extends Component {\r\n\r\n   state = {\r\n      rightAnswer: 1,\r\n      isFormValid: false,\r\n      formControls: createFormControls()\r\n   };\r\n\r\n   submitHandler = (event) => {\r\n      event.preventDefault();\r\n   };\r\n\r\n   addQuestionHandler = event => {\r\n      event.preventDefault();\r\n      const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n      const questionItem = {\r\n         question: question.value,\r\n         id: this.props.quize.length + 1,\r\n         rightAnswer: this.state.rightAnswer,\r\n         answers: [\r\n            {text: option1.value, id: option1.id},\r\n            {text: option2.value, id: option2.id},\r\n            {text: option3.value, id: option3.id},\r\n            {text: option4.value, id: option4.id}\r\n         ]\r\n      };\r\n\r\n      this.props.createQuizeQuestion(questionItem);\r\n\r\n      this.setState({\r\n         rightAnswer: 1,\r\n         isFormValid: false,\r\n         formControls: createFormControls()\r\n      });\r\n   };\r\n\r\n   createQuizeHandler = (event) => {\r\n      event.preventDefault();\r\n\r\n      this.setState({\r\n         rightAnswer: 1,\r\n         isFormValid: false,\r\n         formControls: createFormControls()\r\n      });\r\n\r\n      this.props.finishCreateQuize();\r\n\r\n   };\r\n\r\n   changeHandler = (value, controlName) => {\r\n      const formControls = {...this.state.formControls};\r\n      const control = {...formControls[controlName]};\r\n\r\n      control.touched = true;\r\n      control.value = value;\r\n      control.valid = validate(control.value, control.validation);\r\n\r\n\r\n      formControls[controlName] = control;\r\n\r\n\r\n      this.setState({\r\n         formControls: formControls,\r\n         isFormValid: validateForm(formControls)\r\n      });\r\n   };\r\n\r\n   renderControls() {\r\n      return Object.keys(this.state.formControls).map((controlName, index) => {\r\n         const control = this.state.formControls[controlName];\r\n\r\n         return (\r\n            <Auxiliary key={controlName + index}>\r\n               <Input\r\n                  label={control.label}\r\n                  value={control.value}\r\n                  valid={control.valid}\r\n                  shouldValidate={!!control.validation}\r\n                  touched={control.touched}\r\n                  errorMessage={control.errorMessage}\r\n                  onChange={event => this.changeHandler(event.target.value, controlName)}\r\n               />\r\n               {index === 0 ? <hr/> : null}\r\n            </Auxiliary>\r\n         )\r\n      });\r\n   };\r\n\r\n   changeSelectHandler = event => {\r\n      this.setState({\r\n         rightAnswer: +event.target.value\r\n      })\r\n   };\r\n\r\n   render() {\r\n       // console.log('this.props', this.props);\r\n      const select = <Select\r\n         label=\"Выберите правильный ответ\"\r\n         value={this.state.rightAnswer}\r\n         onChange={this.changeSelectHandler}\r\n         options={[\r\n            {text: 1, value: 1},\r\n            {text: 2, value: 2},\r\n            {text: 3, value: 3},\r\n            {text: 4, value: 4}\r\n         ]}\r\n      />\r\n      return (\r\n         <div className={classes.QuizeCreator}>\r\n            <div>\r\n               <h1>Создание теста</h1>\r\n               <form onSubmit={this.submitHandler}>\r\n                  {this.renderControls()}\r\n                  {select}\r\n                  <div>\r\n                     <Button\r\n                        type=\"primary\"\r\n                        disabled={!this.state.isFormValid}\r\n                        onClick={this.addQuestionHandler}\r\n                     >Добавить вопрос</Button>\r\n                     <Button\r\n                        type=\"success\"\r\n                        disabled={this.props.quize.length === 0}\r\n                        onClick={this.createQuizeHandler}\r\n                     >Создать тест</Button>\r\n                  </div>\r\n\r\n               </form>\r\n            </div>\r\n\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    // console.log('state', state);\r\n   return {\r\n      quize: state.create.quize\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      createQuizeQuestion: item => dispatch(createQuizeQuestion(item)),\r\n      finishCreateQuize: () => dispatch(finishCreateQuize())\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizeCreator);","import {CREATE_QUIZE_QUESTION, RESET_QUIZE_CREATION} from \"./actionType\";\r\nimport axios from \"../../axios/axios-quize\";\r\n\r\nexport function createQuizeQuestion(item) {\r\n   // return {\r\n   //    type:CREATE_QUIZE_QUESTION,\r\n   //    item\r\n   // }\r\n\r\n   return (dispatch, getState) => {\r\n      getState().create.quize.push(item);\r\n   }\r\n}\r\n\r\nexport function resetQuizeCreation() {\r\n   return {\r\n      type: RESET_QUIZE_CREATION\r\n   }\r\n}\r\n\r\nexport function finishCreateQuize() {\r\n   return async (dispatch, getState) => {\r\n      await axios.post('/quize.json', getState().create.quize);\r\n      dispatch(resetQuizeCreation());\r\n   }\r\n}","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionType\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n   return async dispatch => {\r\n\r\n      const apiKey = 'AIzaSyCuZlcuhOi6W_pp8qQZZhMMAeo0QBv_TBU';\r\n\r\n      const authData = {\r\n         email: email,\r\n         password: password,\r\n         returnSecureToken: true\r\n      };\r\n\r\n      let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`;\r\n\r\n      if (isLogin) {\r\n         url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`;\r\n      }\r\n      const response = await axios.post(url, authData);\r\n      console.log(response.data);\r\n      const data = response.data;\r\n\r\n\r\n      const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n      localStorage.setItem('token', data.idToken);\r\n      localStorage.setItem('userId', data.localId);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n\r\n      // console.log('idToken', data.idToken)\r\n      dispatch(authSuccess(data.idToken));\r\n      dispatch(autoLogout(data.expiresIn));\r\n   }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n   return {\r\n      type: AUTH_SUCCESS,\r\n      token\r\n   }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n   return dispatch => {\r\n      setTimeout( ()=> {\r\n         dispatch(logout())\r\n      }, time * 1000)\r\n   }\r\n}\r\n\r\nexport function logout() {\r\n   localStorage.removeItem('token');\r\n   localStorage.removeItem('userId');\r\n   localStorage.removeItem('expirationDate');\r\n   return {\r\n      type: AUTH_LOGOUT\r\n   }\r\n}\r\n\r\nexport function autoLogin() {\r\n   return dispatch => {\r\n      const token = localStorage.getItem('token');\r\n      if(!token) {\r\n         dispatch(logout());\r\n      }else {\r\n         const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n         if(expirationDate <= new Date()){\r\n            dispatch(logout());\r\n         }else {\r\n            dispatch(authSuccess(token));\r\n            dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n         }\r\n      }\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport classes from './Auth.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js';\r\nimport axios from 'axios';\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n\r\n   state = {\r\n      isFormValid: false,\r\n      formControls: {\r\n         email: {\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            errorMessage: 'Введите корректный email',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n               required: true,\r\n               email: true\r\n            }\r\n         },\r\n         password: {\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Пароль',\r\n            errorMessage: 'Введите корректный пароль',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n               required: true,\r\n               minLength: 6\r\n            }\r\n         }\r\n      }\r\n   };\r\n\r\n   loginHandler = () => {\r\n      this.props.auth(\r\n         this.state.formControls.email.value,\r\n         this.state.formControls.password.value,\r\n         true\r\n      );\r\n   };\r\n\r\n   registerHandler = () => {\r\n      this.props.auth(\r\n         this.state.formControls.email.value,\r\n         this.state.formControls.password.value,\r\n         false\r\n      );\r\n   };\r\n\r\n   submitHandlet = (event) => {\r\n      event.preventDefault();\r\n   };\r\n\r\n   validateControl(value, validation) {\r\n      if (!validation) {\r\n         return true;\r\n      }\r\n\r\n      let isValid = true;\r\n      if (validation.required) {\r\n         isValid = value.trim() !== '' && isValid;\r\n      }\r\n\r\n      if (validation.email) {\r\n         isValid = is.email(value) && isValid;\r\n      }\r\n\r\n      if (validation.minLength) {\r\n         isValid = value.length >= validation.minLength && isValid;\r\n      }\r\n\r\n      return isValid;\r\n   }\r\n\r\n   onChangeHandler = (event, controlName) => {\r\n      const formControls = {...this.state.formControls};\r\n      const control = {...formControls[controlName]};\r\n      control.value = event.target.value;\r\n      control.touched = true;\r\n      control.valid = this.validateControl(control.value, control.validation);\r\n\r\n      formControls[controlName] = control;\r\n\r\n      let isFormValid = true;\r\n      Object.keys(formControls).forEach(name => {\r\n         isFormValid = formControls[name].valid && isFormValid;\r\n      });\r\n\r\n      this.setState({\r\n         formControls,\r\n         isFormValid\r\n      })\r\n   };\r\n\r\n   renderInputs() {\r\n      return Object.keys(this.state.formControls).map((controlName, index) => {\r\n         const control = this.state.formControls[controlName];\r\n         return (\r\n            <Input\r\n               key={controlName + index}\r\n               type={control.type}\r\n               label={control.label}\r\n               errorMessage={control.errorMessage}\r\n               valid={control.valid}\r\n               touched={control.touched}\r\n               shouldValidate={!!control.validation}\r\n               onChange={(event) => {\r\n                  this.onChangeHandler(event, controlName);\r\n               }}\r\n            />\r\n         )\r\n      });\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <div className={classes.Auth}>\r\n            <div>\r\n               <h1>Авторизация</h1>\r\n               <form onSubmit={this.submitHandlet}>\r\n                  <div className={classes['c-input-wrapper']}>\r\n\r\n                     {this.renderInputs()}\r\n\r\n                     {/*<div className={classes['c-input-col']}>*/}\r\n                     {/*    <input className={classes['c-input']} type=\"text\"/>*/}\r\n                     {/*</div>*/}\r\n                     {/*<div className={classes['c-input-col']}>*/}\r\n                     {/*    <input className={classes['c-input']} type=\"text\"/>*/}\r\n                     {/*</div>*/}\r\n                  </div>\r\n\r\n\r\n                  <Button\r\n                     type=\"success\"\r\n                     onClick={this.loginHandler}\r\n                     disabled={!this.state.isFormValid}\r\n                  >Войти</Button>\r\n                  <Button\r\n                     type=\"primary\"\r\n                     onClick={this.registerHandler}\r\n                     disabled={!this.state.isFormValid}\r\n                  >Зарегистрироваться</Button>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Logout extends Component {\r\n   componentDidMount() {\r\n      this.props.logout();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Redirect to={\"/\"} />\r\n      )\r\n   }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      logout: () => dispatch(logout())\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quize from './containers/Quize/Quize.js';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport QuizeList from './containers/QuizeList/QuizeList'\nimport QuizeCreator from './containers/QuizeCreator/QuizeCreator'\nimport Auth from './containers/Auth/Auth'\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n\n   componentDidMount() {\n      this.props.autoLogin();\n   }\n\n   render() {\n\n      let routes = (\n         <Switch>\n            <Route path='/auth' component={Auth}/>\n            <Route path='/quize/:id' component={Quize}/>\n            <Route path='/' exact component={QuizeList}/>\n            <Redirect to={'/'}/>\n         </Switch>\n      );\n\n      if (this.props.isAuthenticated) {\n         routes = (\n            <Switch>\n               <Route path='/quize-creator' component={QuizeCreator}/>\n               <Route path='/quize/:id' component={Quize}/>\n               <Route path='/' exact component={QuizeList}/>\n               <Route path='/logout' component={Logout}/>\n               <Redirect to={'/'}/>\n            </Switch>\n         );\n      }\n\n\n      return (\n         <div className=\"App\">\n            <Layout>\n               {routes}\n            </Layout>\n         </div>\n      )\n   }\n\n}\n\nfunction mapStateToProps(state) {\n   console.log(state)\n   return {\n      isAuthenticated: !!state.auth.token\n   }\n}\n\nfunction mapDispatchToProps(dispatch) {\n   return {\n      autoLogin: () => dispatch(autoLogin())\n   }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_QUIZE_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISHED_QUIZE, QUIZE_NEXT_QUIESTIN,\r\n  QUIZE_SET_STATE, RETRY_QUIZE\r\n} from \"../actions/actionType\";\r\n\r\nconst initialState = {\r\n   quizes: [],\r\n   loading: false,\r\n   error: null,\r\n   results: {}, //{[id]: 'success' 'error'}\r\n   isFinished: false,\r\n   activeQuestion: 0,\r\n   answerState: null, //{[id]: 'success' 'error'}\r\n   quize: null\r\n};\r\n\r\nexport default function quizeReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n      case FETCH_QUIZES_START:\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         };\r\n      case FETCH_QUIZES_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            quizes: action.quizes\r\n         };\r\n      case FETCH_QUIZES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.error\r\n         };\r\n      case FETCH_QUIZE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            quize: action.quize\r\n         };\r\n\r\n      case QUIZE_SET_STATE:\r\n         return {\r\n            ...state,\r\n            answerState: action.answerState,\r\n            results: action.results\r\n         };\r\n\r\n      case FINISHED_QUIZE:\r\n         return {\r\n            ...state, isFinished: true\r\n         };\r\n      case QUIZE_NEXT_QUIESTIN:\r\n         return {\r\n            ...state,\r\n            answerState: null,\r\n            activeQuestion: action.number\r\n         };\r\n     case RETRY_QUIZE:\r\n       return {\r\n         ...state,\r\n         results: {},\r\n         isFinished: false,\r\n         activeQuestion: 0,\r\n         answerState: null\r\n       };\r\n      default:\r\n         return state;\r\n   }\r\n}","import {CREATE_QUIZE_QUESTION, RESET_QUIZE_CREATION} from \"../actions/actionType\";\r\n\r\nconst initialState = {\r\n  quize: []\r\n};\r\n\r\nexport function createReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n\r\n      // case CREATE_QUIZE_QUESTION:\r\n      //    return {\r\n      //       ...state,\r\n      //       quize: [...state.quize, action.item]\r\n      //    };\r\n\r\n      case RESET_QUIZE_CREATION:\r\n         return {\r\n            ...state,\r\n            quize: []\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionType\";\r\n\r\nconst initialState = {\r\n   token: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, action){\r\n   switch (action.type) {\r\n\r\n      case AUTH_SUCCESS:\r\n         return {\r\n           ...state,\r\n            token: action.token\r\n         };\r\n\r\n      case AUTH_LOGOUT:\r\n         return {\r\n           ...state,\r\n            token: null\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}","import {combineReducers} from 'redux';\r\nimport quizeReducer from './quiz';\r\nimport {createReducer} from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    quize: quizeReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}